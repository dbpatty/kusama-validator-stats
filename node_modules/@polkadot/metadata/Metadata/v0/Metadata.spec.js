"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _codec = require("@polkadot/types/codec");

var _ = _interopRequireDefault(require("../"));

var _staticSubstrate = _interopRequireDefault(require("./static-substrate.json"));

var _static = _interopRequireDefault(require("./static"));

var _testUtil = require("../util/testUtil");

// Copyright 2017-2019 @polkadot/metadata authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
describe('Metadata', () => {
  const registry = new _codec.TypeRegistry();
  it('works with fallback', () => {
    const metadata = new _.default(registry, _static.default);
    const metadataV0 = (0, _codec.createType)(registry, 'MetadataV0', _static.default);
    expect(metadata.asV0.toString()).toEqual(metadataV0.toString());
  });
  it('decodes latest substrate properly', () => {
    const metadata = new _.default(registry, _static.default);
    const json = metadata.asV0.toJSON();

    try {
      expect(metadata.version).toBe(0);
      expect(metadata.asV0.modules.length).not.toBe(0);
      expect(json).toEqual(_staticSubstrate.default);
    } catch (error) {
      console.error(JSON.stringify(json));
      throw error;
    }
  });
  (0, _testUtil.toLatest)(registry, 0, _static.default);
  (0, _testUtil.defaultValues)(registry, _static.default);
});